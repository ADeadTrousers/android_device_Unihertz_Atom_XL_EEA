type thermal_manager, domain;
type thermal_manager_data_file, file_type, data_file_type;
type thermal_manager_exec, file_type, exec_type, vendor_file_type;

init_daemon_domain(thermal_manager);

allow thermal_manager proc_mtkcooler:dir {search};
allow thermal_manager proc_mtktz:dir {search};
allow thermal_manager proc_thermal:dir {search};
allow thermal_manager proc_mtkcooler:file {ioctl read write getattr lock append map open};
allow thermal_manager proc_mtktz:file {ioctl read write getattr lock append map open};
allow thermal_manager proc_thermal:file {ioctl read write getattr lock append map open};
allow thermal_manager thermal_manager_data_file:file {ioctl read write create getattr setattr lock append map unlink rename open};
allow thermal_manager thermal_manager_data_file:dir {ioctl read write getattr setattr lock add_name remove_name search open};
allow thermal_manager mediaserver:fd {use};
allow thermal_manager mediaserver:fifo_file {read write};
allow thermal_manager mediaserver:tcp_socket {read write};
allow thermal_manager camera_isp_device:chr_file {read write};
allow thermal_manager cameraserver:fd {use};
allow thermal_manager kd_camera_hw_device:chr_file {read write};
allow thermal_manager MTK_SMI_device:chr_file {read};
allow thermal_manager surfaceflinger:fd {use};
allow thermal_manager property_socket:sock_file {write};
allow thermal_manager init:unix_stream_socket {connectto};
allow thermal_manager mtk_thermal_config_prop:property_service {set};
allow thermal_manager mtk_thermal_config_prop:file {read getattr map open};
allow thermal_manager sysfs_therm:file {write lock append map open};
allow thermal_manager self:capability {chown fowner};
allow thermal_manager thermalloadalgod:unix_stream_socket {connectto};
