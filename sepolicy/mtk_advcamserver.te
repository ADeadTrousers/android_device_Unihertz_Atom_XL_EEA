type mtk_advcamserver, domain, binderservicedomain, coredomain;
type mtk_advcamserver_exec, file_type, exec_type, system_file_type;
type mtk_advcamserver_service, service_manager_type;

init_daemon_domain(mtk_advcamserver);
# add_service(mtk_advcamserver,mtk_advcamserver_service);

allow mtk_advcamserver servicemanager:binder {call transfer};
allow mtk_advcamserver hwservicemanager:binder {call transfer};
allow mtk_advcamserver mtk_advcamserver:binder {call transfer};
allow mtk_advcamserver mtk_advcamserver:binder {transfer};
allow mtk_advcamserver mtk_advcamserver:fd {use};
allow mtk_advcamserver binderservicedomain:binder {call transfer};
allow mtk_advcamserver binderservicedomain:fd {use};
allow mtk_advcamserver appdomain:binder {call transfer};
allow mtk_advcamserver appdomain:fd {use};
allow mtk_advcamserver mtk_advcamserver_service:service_manager {add find};
allow mtk_advcamserver hwservicemanager_prop:file {read getattr map open};
allow mtk_advcamserver mtk_hal_camera:binder {call transfer};
allow mtk_advcamserver mtk_hal_camera:fd {use};
allow mtk_advcamserver hal_graphics_allocator_default:fd {use};
allow mtk_advcamserver hal_graphics_mapper_hwservice:hwservice_manager {find};
allow mtk_advcamserver ion_device:chr_file {read open};
allow mtk_advcamserver debugfs_ion:dir {search};
allow mtk_advcamserver ion_device:chr_file {ioctl};
allow mtk_advcamserver proc_perfmgr:dir {search};
allow mtk_advcamserver proc_perfmgr:file {ioctl read open};
allow mtk_advcamserver mtk_hal_camera:binder {transfer};
